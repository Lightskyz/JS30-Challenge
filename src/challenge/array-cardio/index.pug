doctype html 

html(lang='en') 
	head 
		link(rel='stylesheet', href='../../style.min.css')
		link(rel='stylesheet', href='style.min.css')
		meta(charset='utf-8')
		title array-cardio
	body

		h2 Inventors Array
		pre 
			code.language-javascript
				| const inventors = [ { first: 'Albert', last: 'Einstein', year: 1879, passed: 1955 }, { first: 'Isaac', last: 'Newton', year: 1643, passed: 1727 }, { first: 'Galileo', last: 'Galilei', year: 1564, passed: 1642 }, { first: 'Marie', last: 'Curie', year: 1867, passed: 1934 }, { first: 'Johannes', last: 'Kepler', year: 1571, passed: 1630 }, { first: 'Nicolaus', last: 'Copernicus', year: 1473, passed: 1543 }, { first: 'Max', last: 'Planck', year: 1858, passed: 1947 }, { first: 'Katherine', last: 'Blodgett', year: 1898, passed: 1979 }, { first: 'Ada', last: 'Lovelace', year: 1815, passed: 1852 }, { first: 'Sarah E.', last: 'Goode', year: 1855, passed: 1905 }, { first: 'Lise', last: 'Meitner', year: 1878, passed: 1968 }, { first: 'Hanna', last: 'Hammarström', year: 1829, passed: 1909 } ]

		h2 People Array
		pre 
			code.language-javascript
				| const people = ['Beck, Glenn', 'Becker, Carl', 'Beckett, Samuel', 'Beddoes, Mick', 'Beecher, Henry', 'Beethoven, Ludwig', 'Begin, Menachem', 'Belloc, Hilaire', 'Bellow, Saul', 'Benchley, Robert', 'Benenson, Peter', 'Ben-Gurion, David', 'Benjamin, Walter', 'Benn, Tony', 'Bennington, Chester', 'Benson, Leana', 'Bent, Silas', 'Bentsen, Lloyd', 'Berger, Ric', 'Bergman, Ingmar', 'Berio, Luciano', 'Berle, Milton', 'Berlin, Irving', 'Berne, Eric', 'Bernhard, Sandra', 'Berra, Yogi', 'Berry, Halle', 'Berry, Wendell', 'Bethea, Erin', 'Bevan, Aneurin', 'Bevel, Ken', 'Biden, Joseph', 'Bierce, Ambrose', 'Biko, Steve', 'Billings, Josh', 'Biondo, Frank', 'Birrell, Augustine', 'Black, Elk', 'Blair, Robert', 'Blair, Tony', 'Blake, William'];

		hr

		h2 1. filter() method
		pre
			code.language-javascript
				| //Filter the list of inventors for those who were born in the 1500's
				| const filterArray = inventors.filter(inventor => inventor.year < 1600 && inventor.year >= 1500);

		hr

		h2 2. map() method
		pre
			code.language-javascript
				| //Give us an array of the inventors' first and last names
				| const mapArray = inventors.map(inventor => `${inventor.first} ${inventor.last}`);

		hr

		h2 3. sort() method
		pre
			code.language-javascript
				| //Sort the inventors by birthdate, oldest to youngest
				| const sortArray = inventors.sort((a, b) => a.year > b.year ? 1 : -1);

		hr

		h2 4. reduce() method
		pre
			code.language-javascript
				| //How many years did all the inventors live?
				| const totalYears = inventors.reduce((total, inventor) => {
				| 	return total + (inventor.passed - inventor.year);
				| }, 0);

		hr

		h2 5. reduce() method
		pre
			code.language-javascript
				| // Sort the inventors by years lived
				| const oldest = inventors.sort(function(a, b) {
				| 	const lastGuy = a.passed - a.year;
				| 	const nextGuy = b.passed - b.year;
				| 	return lastGuy > nextGuy ? -1 : 1;
				| });

		hr

		h2 6. filter() method
		p Go to #[a(href='https://en.wikipedia.org/wiki/Category:Boulevards_in_Paris')  Boulevard in Paris] and try the code from the console
		pre
			code.language-javascript
				| //create a list of Boulevards in Paris that contain 'de' anywhere in the name
				| const category = document.querySelector('.mw-category');
				| const links = [...category.querySelectorAll('a')];
				| const de = links
				|	.map(link => link.textContent)
				|	.filter(streetName => streetName.includes('de'));

		hr

		h2 7. sort() method
		pre
			code.language-javascript
				| // Sort the people alphabetically by last name
				| const alpha = people.sort((lastOne, nextOne) => {
				| 	const [aLast, aFirst] = lastOne.split('');
				| 	const [bLast, bFirst] = nextOne.split('');
				| 	return aLast > bLast ? 1 : -1;
				| }); 	

		hr

		h2 8. reduce() method
		pre
			code.language-javascript
				| // Sum up the instances of each of these
				| const data = ['car', 'car', 'truck', 'truck', 'bike', 'walk', 'car', 'van', 'bike', 'walk', 'car', 'van', 'car', 'truck'];
				| const transportation = data.reduce(function(obj, item) {
				| if (!obj[item]) {
				| 	obj[item] = 0;
				| }
				| obj[item]++;
				| return obj;
				| }, {}); 	
		
		script(type='text/javascript', src='../../script.min.js')
		script(type='text/javascript')
			include script.js